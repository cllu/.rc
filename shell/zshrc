######################################################################
# stuff from oh-my-zsh

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.rc/shell/oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
#ZSH_THEME="gallois"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to disable command auto-correction.
# DISABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git git-extras supervisor systemd celery)

source $ZSH/oh-my-zsh.sh

# User configuration

# export PATH=$HOME/bin:/usr/local/bin:$PATH
# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

######################################################################

autoload -Uz promptinit
promptinit
prompt adam1


############## zsh theme
ZSH_THEME_GIT_PROMPT_PREFIX="%{$reset_color%}%{$fg[green]%}["
ZSH_THEME_GIT_PROMPT_SUFFIX="]%{$reset_color%}"
ZSH_THEME_GIT_PROMPT_DIRTY="%{$fg[red]%}*%{$reset_color%}"
ZSH_THEME_GIT_PROMPT_CLEAN=""

virtualenv_info() {
  [ $VIRTUAL_ENV ] && echo '('`basename $VIRTUAL_ENV`') '
}

#Customized git status, oh-my-zsh currently does not allow render dirty status before branch
git_custom_status() {
  local cb=$(current_branch)
  if [ -n "$cb" ]; then
    echo "$(parse_git_dirty)%{$fg_bold[yellow]%}$(work_in_progress)%{$reset_color%}$ZSH_THEME_GIT_PROMPT_PREFIX$(current_branch)$ZSH_THEME_GIT_PROMPT_SUFFIX"
  fi
}

RPS1='%{$fg[green]%}$(virtualenv_info)%{$reset_color%}% $(git_custom_status) $EPS1'

#PROMPT='%{$fg[cyan]%}[%~% ]%(?.%{$fg[green]%}.%{$fg[red]%})%B$%b '
############## end zsh theme


setopt histignorealldups sharehistory

# leave background jobs alone
setopt NO_HUP

# Use vim keybindings
#bindkey -v

# Keep 1000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=100000
SAVEHIST=100000
HISTFILE=~/.zsh_history

# Use modern completion system
autoload -Uz compinit
compinit

# dynamically change the xterm title
case $TERM in
    xterm*)
        precmd () {print -Pn "\e]0;%n@%m\a"}
        ;;
esac

case $TERM in
  screen*)
    precmd(){
      # Restore tmux-title to 'zsh'
      printf "\033kzsh\033\\"
      # Restore urxvt-title to 'zsh'
      print -Pn "\e]2;zsh:%~\a"
    }
    preexec(){
      # set tmux-title to running program
      printf "\033k$(echo "$1" | cut -d" " -f1)\033\\"
      # set urxvt-title to running program
      print -Pn "\e]2;zsh:$(echo "$1" | cut -d" " -f1)\a"
    }
    ;;
esac

export USR="$HOME/.usr"

# custom binary file path
export PATH="$PATH:$HOME/.bin"
export PATH="$PATH:$USR/bin"

# include/lib/man
export C_INCLUDE_PATH="$USR/include:$C_INCLUDE_PATH"
export CPLUS_INCLUDE_PATH="$USR/include:$CPLUS_INCLUDE_PATH"
export LD_LIBRARY_PATH="$USR/lib:/usr/lib64:/usr/lib:/usr/local/lib:$LD_LIBRARY_PATH"
export MANPATH="$USR/share/man:$MANPATH"

# set JAVA_HOME
java_home_alt=(
    "/opt/java"        # archlinux aur
    "/usr/java/latest" # centos
    "$USR/opt/java"    # custom installation
)
for dir in $java_home_alt; do
    [[ -d $dir ]] && export JAVA_HOME=$dir && break;
done
# ant and maven
[[ -d $USR/opt/apache-ant  ]] && export ANT_HOME="$USR/opt/apache-ant"
[[ -d $USR/opt/apache-maven ]] && export M2_HOME="$USR/opt/apache-maven"
export MAVEN_OPTS="-Xmx4096M -Xss1024M -XX:MaxPermSize=4096M -XX:+CMSClassUnloadingEnabled"

# Python virtualenv, we prefer to user python3
[[ -d $USR/opt/py2env ]] && export PATH="$USR/opt/py2env/bin:$PATH"
[[ -d $USR/opt/py3env ]] && export PATH="$USR/opt/py3env/bin:$PATH"
# Python NLTK data
export NLTK_DATA="$USR/share/nltk_data/"

# Ruby
export PATH="$HOME/.gem/ruby/2.1.0/bin:$PATH"
## Grunt would like to know where my Chrome is
alias google-chrome=google-chrome-stable
export CHROME_BIN=/usr/bin/google-chrome-stable

# Perl
export PERL_LOCAL_LIB_ROOT="$PERL_LOCAL_LIB_ROOT:$USR/opt/perl5"
export PERL_MB_OPT="--install_base $USR/opt/perl5"
export PERL_MM_OPT="INSTALL_BASE=$USR/opt/perl5"
export PERL5LIB="$USR/opt/perl5/lib/perl5:$PERL5LIB"
export PATH="$USR/opt/perl5/bin:$PATH"

# Android SDK on archlinux
export PATH="/opt/android-sdk/tools:$PATH"

# Google Cloud SDK
export CLOUDSDK_PYTHON="/usr/bin/python2"
export PATH="/home/cllu/.usr/opt/google-cloud-sdk/bin:$PATH"
# gsutil
export PATH="$USR/opt/google/gsutil:$PATH"



# aliases
. ~/.aliases

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting

# recommend from arclinux pycharm
# ===> https://wiki.archlinux.org/index.php/Java_Runtime_Environment_Fonts
export _JAVA_OPTIONS='-Dawt.useSystemAAFontSettings=lcd'
