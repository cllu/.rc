
# Customize installation
export RCHOME=$HOME/.rc

# Report CPU usage for commands running longer than 10 seconds
REPORTTIME=10

if [[ "$(uname)" == "Darwin" ]]; then
  # macOS-specific settings
  source $RCHOME/shell/env-osx.sh
elif [[ "$(expr substr $(uname -s) 1 5)" == "Linux" ]]; then
  # Linux-specific settings
  source $RCHOME/shell/env-linux.sh
fi

if [ -f $RCHOME/shell/env-local.sh ]; then
  source $RCHOME/shell/env-local.sh
fi

# load oh-my-zsh
# it is necessary to load oh-my-zsh after platform env settings, since plugins like 
# virtualenvwrapper relies on certain Python packages
source $RCHOME/shell/oh-my-zsh.sh

# additional aliases
source $RCHOME/shell/aliases

# Use pyenv to mange Python versions on both Linux and macOS
# pyenv is a submodule that may haven't been checked out
if [ -f $RCHOME/vendor/pyenv/bin/pyenv ]; then
  export PYENV_ROOT="$RCHOME/vendor/pyenv"
  # the initialization in ./zshrc file (for both macOS and linux)
  PATH="$PYENV_ROOT/bin:$PATH"
  # put pipenv virtualenv folder in the project's .venv folder, instead of inside ~/.local/share/virtualenvs/
  export PIPENV_VENV_IN_PROJECT=true
  eval "$(pyenv init -)"
fi

# Use nvm to manage node versions
if [ -f $RCHOME/vendor/nvm/nvm.sh ]; then
    export NVM_DIR="$RCHOME/vendor/nvm"
    source "$NVM_DIR/nvm.sh"
    source "$NVM_DIR/bash_completion"
fi

export EDITOR=vim

# customize ripgrep
export RIPGREP_CONFIG_PATH=$RCHOME/ripgrep/rc

# rustup installs things in ~/.cargo/bin
if [ -d $HOME/.cargo/bin ]; then
  export PATH=$HOME/.cargo/bin:$PATH
fi

# uv is installed in ~/.local/bin
if [ -d $HOME/.local/bin ]; then
  export PATH=$HOME/.local/bin:$PATH
fi
